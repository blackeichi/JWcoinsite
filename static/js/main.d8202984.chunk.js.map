{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","json","Chart","coinId","isDark","useQuery","endDate","Math","floor","Date","now","startDate","then","response","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","x","Content","styled","div","Price","fetchCoinPrice","quotes","USD","ath_price","market_cap","Title","h1","props","accentColor","Loader","span","Container","Header","header","Overview","OverviewItem","Link1","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","cardBgColor","Img","img","Coins","toggleDark","onClick","slice","coin","pathname","id","src","toLowerCase","Router","basename","process","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","useState","setIsDark","current","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.d8202984.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport async function fetchCoins() {\r\n  //return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n  return await (await fetch(`${BASE_URL}/coins`)).json();\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\nexport function fetchCoinPrice(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { type } from \"os\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\ninterface ChartProps {\r\n  coinId: string;\r\n  isDark: boolean;\r\n}\r\nfunction Chart({ coinId, isDark }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  const date = Date.now();\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <>\r\n          <ApexChart\r\n            type=\"line\"\r\n            series={[\r\n              {\r\n                name: \"Price\",\r\n                data: data?.map((price) => price.close),\r\n              },\r\n            ]}\r\n            options={{\r\n              theme: {\r\n                mode: isDark ? \"dark\" : \"light\",\r\n              },\r\n              chart: {\r\n                height: 300,\r\n                width: 500,\r\n                toolbar: {\r\n                  show: false,\r\n                },\r\n                background: \"transparent\",\r\n              },\r\n              grid: { show: false },\r\n              stroke: {\r\n                curve: \"smooth\",\r\n                width: 4,\r\n              },\r\n              yaxis: {\r\n                show: true,\r\n              },\r\n              xaxis: {\r\n                axisBorder: { show: false },\r\n                axisTicks: { show: false },\r\n                labels: { show: false },\r\n                type: \"datetime\",\r\n                categories: data?.map((price) => price.time_close),\r\n              },\r\n              fill: {\r\n                type: \"gradient\",\r\n                gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\r\n              },\r\n              colors: [\"#0fbcf9\"],\r\n              tooltip: {\r\n                y: {\r\n                  formatter: (value) => `$${value.toFixed(2)}`,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n          <ApexChart\r\n            type=\"candlestick\"\r\n            series={[\r\n              {\r\n                data: [\r\n                  {\r\n                    x: Date.now() - 60 * 60 * 24 * 6,\r\n                    y: [6629.81, 6650.5, 6623.04, 6633.33],\r\n                  },\r\n                  {\r\n                    x: Date.now() - 60 * 60 * 24 * 5,\r\n                    y: [6629.833, 6650.5, 6623.04, 6633.33],\r\n                  },\r\n                  {\r\n                    x: Date.now() - 60 * 60 * 24 * 4,\r\n                    y: [6629.81, 6650.5, 6623.04, 6633.33],\r\n                  },\r\n                  {\r\n                    x: Date.now() - 60 * 60 * 24 * 3,\r\n                    y: [6629.81, 6650.5, 6623.04, 6633.33],\r\n                  },\r\n                  {\r\n                    x: Date.now() - 60 * 60 * 24 * 2,\r\n                    y: [6629.81, 6650.5, 6623.04, 6633.33],\r\n                  },\r\n                  {\r\n                    x: Date.now() - 60 * 60 * 24 * 1,\r\n                    y: [6629.81, 6650.5, 6623.04, 6633.33],\r\n                  },\r\n                  {\r\n                    x: Date.now(),\r\n                    y: [6629.81, 6650.5, 6623.04, 6633.33],\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n            options={{\r\n              chart: {\r\n                type: \"candlestick\",\r\n              },\r\n              xaxis: {\r\n                type: \"datetime\",\r\n              },\r\n              yaxis: {\r\n                show: true,\r\n              },\r\n            }}\r\n          />\r\n          <span>Hi</span>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { fetchCoinPrice } from \"../api\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface IPriceProp {\r\n  coinId: string;\r\n}\r\n\r\nfunction Price({ coinId }: IPriceProp) {\r\n  const { isLoading, data } = useQuery<PriceData>(\r\n    [\"price\", coinId],\r\n    () => fetchCoinPrice(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <Content>\r\n          <span>Most : {data?.quotes.USD.ath_price.toFixed(2)}</span>\r\n          <span>시가총액 : {data?.quotes.USD.market_cap.toFixed(2)}</span>\r\n          <span>현재 가격 : {data?.quotes.USD.price.toFixed(2)}</span>\r\n        </Content>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 33%;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Link1 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    padding: 7px 0px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\ninterface ICoinProps {\r\n  isDark: boolean;\r\n}\r\n\r\nfunction Coin({ isDark }: ICoinProps) {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Link1>\r\n          <Link to={\"/\"}>Home</Link>\r\n          <Link to={`/${coinId}`}>{coinId}</Link>\r\n        </Link1>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart isDark={isDark} coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\ninterface ICoinsProps {\r\n  toggleDark: () => void;\r\n}\r\nfunction Coins({ toggleDark }: ICoinsProps) {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n        <button onClick={toggleDark}>Toggle Dark Mode</button>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\ninterface IRouterProps {\r\n  toggleDark: () => void;\r\n  isDark: boolean;\r\n}\r\n\r\nfunction Router({ toggleDark, isDark }: IRouterProps) {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin isDark={isDark} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins toggleDark={toggleDark} />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"transparent\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"white\",\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useState } from \"react\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color:${(props) => props.theme.bgColor};\r\n  color:${(props) => props.theme.textColor};\r\n  line-height: 1.2;\r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  const [isDark, setIsDark] = useState(false);\r\n  const toggleDark = () => setIsDark((current) => !current);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router isDark={isDark} toggleDark={toggleDark} />\r\n        <ReactQueryDevtools initialIsOpen={true} />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n      <App />\r\n    </QueryClientProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}